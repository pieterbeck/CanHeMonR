% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/region_growing_wrapper.r
\name{grow_crowns}
\alias{grow_crowns}
\title{Outline Tree Crowns In Imagery}
\usage{
grow_crowns(r_file, seed_shpfile, seed_extent = rep(NA, 4),
  avoid_recalculation = T, prob_cut = 99, prob_step_down = 2,
  seed_nrs = NA, outp_crown_shp_filename, process_dir = NULL,
  max_crown_RADIUS_in_m = 4, min_crown_RADIUS_in_m = 0.6, plott = F,
  RGBseq = c(1, 2, 3), parallel = F, nWorkers = 4)
}
\arguments{
\item{r_file}{Filename of raster brick to run crown delineation on. From tests with hyperspectral data, it appears r_file can have up to 6 bands, equally spaced in wavelength, before the colinearity crashes mahalanobis}

\item{seed_shpfile}{Filename of point shapefile that has points at the center of trees.}

\item{seed_extent}{A numerical vector of length four. It should contain raster::extent parameters to restrict the analysis only to the
points in seed_shpfile that fall within a certain extent. To not trim the data in a certain direction, set that position
in seed_extent to NA. Default is c(NA,NA,NA,NA), which means the seed_shpfile is not trimmed before seed_nrs are checked..}

\item{avoid_recalculation}{Do you want to check if a run with these settings and same output filename was already done, and add outlines of new seeds to that output? Default is T.}

\item{prob_cut}{The probability [in percent] cut off in the chi square distribution that determines the cut-off in Mahalanobis distance higher prob_cut values produce larger crowns. Default is 99 percent.}

\item{prob_step_down}{As long as the region grows all the way to the max_crown_radius, prob_cut will be stepped down by prob_step_down and the region will be grown again. Default is 2 percent}

\item{seed_nrs}{Seeds to be used for crown estimation. Starts counting at 1, for FID = 0. If set to NA, all seeds will be included. Default is NA.}

\item{outp_crown_shp_filename}{Base for the output polygon shape filename. **_probcut.shp** will be added to create the final filename.}

\item{process_dir}{An optional directory to write output to while processing. Can come in handy if network access is a bottleneck
or i/o to the network causes crashes. Default is NULL in which case output is written to the final destination directory.}

\item{max_crown_RADIUS_in_m}{The maximum radius a crown can have (in image units of **r_file**. Best to work in m). Default is 4.}

\item{min_crown_RADIUS_in_m}{The minimum radius a crown should have (in image units of **r_file**. Best to work in m). Default is 0.6.}

\item{plott}{Logical. Do you want to plot the results? Defaults to F.}

\item{RGBseq}{3-element vectors given the band nummers for RGB plotting of crowns. Only considered is plott=T. Default is c(1,2,3).}

\item{parallel}{Should the code be run in parallel using the doParallel package? Default is FALSE.}

\item{nWorkers}{If running the ocde in parallel, how many workers should be used? Default is 4.}
}
\value{
Writes away a .shp polygon file of crowns. Attributes include
npx_t_b = the number of pixels in the crown touching the edge of the disk of maximum crown size,
nstrtcl = the number of pixels taken for granted as crown at the start of the region growing,
probcut = the final prob_cut value for this crown.
any attributes from the seeds .shp file will be saved in the output as well.

#' Laura
tt <- grow_crowns(r_file <- "/Volumes/Laura/Pieter/pt606000-4401000.tif",
                  seed_shpfile <- "/Volumes/Laura/Castelo_Branco_DMC_Nov2016/DMC_Nov2016_inspect_multi_final_20170203.shp",
                  seed_extent = rep(NA,4), avoid_recalculation = T, prob_cut = 99, prob_step_down = 2, seed_nrs = NA,
                  outp_crown_shp_filename = "/Volumes/Laura/Pieter/results/pt606000-4401000", process_dir = NULL, max_crown_RADIUS_in_m = 4, min_crown_RADIUS_in_m = 0.6,
                  plott = F, RGBseq = c(1,2,3), parallel = F, nWorkers = 4)
}
\description{
Given a an image and point shapefile with points ('seeds') placed at the center of crowns,
estimate the tree crown around every seed,
and write the results away as a polygon shapefile.
}
